{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMwOOeBERyvMlkJChSAbgMP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUEV4q9Mgr9z","executionInfo":{"status":"ok","timestamp":1721720494962,"user_tz":-180,"elapsed":14,"user":{"displayName":"Watene Keguti","userId":"00003334493310483030"}},"outputId":"654e127c-4231-475b-e802-78da33d889b5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Approximate integral: 2.6800000000000006\n"]}],"source":["import numpy as np\n","\n","def trapezoidal_rule(f, a, b, n):\n","  \"\"\"\n","  Approximates the definite integral of a function using the trapezoidal rule.\n","\n","  Args:\n","    f: The function to be integrated.\n","    a: The lower limit of integration.\n","    b: The upper limit of integration.\n","    n: The number of subintervals.\n","\n","  Returns:\n","    The approximate value of the integral.\n","  \"\"\"\n","\n","  h = (b - a) / n  # Width of each subinterval\n","  x = np.linspace(a, b, n + 1)  # Equally spaced points\n","  y = f(x)\n","\n","  integral = h * (y[0] + y[-1] + 2 * np.sum(y[1:-1])) / 2\n","  return integral\n","\n","# Example usage\n","def f(x):\n","  return x**2\n","\n","a = 0\n","b = 2\n","n = 10\n","\n","result = trapezoidal_rule(f, a, b, n)\n","print(\"Approximate integral:\", result)\n","\n"]}]}